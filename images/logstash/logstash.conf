input {
    jdbc {
        jdbc_driver_library => '${CONNECTOR_PATH}'
        jdbc_driver_class => 'com.mysql.jdbc.Driver'
        jdbc_connection_string => 'jdbc:mysql://${MYSQL_HOST}:3306/qa'
        jdbc_user => 'root'
        jdbc_password => '${MYSQL_PASS}'
        jdbc_validate_connection => true
        schedule => '*/9 * * * *'
        use_column_value => true
        tracking_column => "id"
        statement => 'SELECT questions.title, questions.body, questions.accepted_answer_id, questions.last_activity_date, questions.score, questions.id, users.reputation as user_reputation from qa.questions JOIN qa.users ON questions.owner_user_id = users.id WHERE questions.id >:sql_last_value'
        clean_run =>false
    }
}

filter {
    jdbc_streaming {
        jdbc_driver_library => '${CONNECTOR_PATH}'
        jdbc_driver_class => 'com.mysql.jdbc.Driver'
        jdbc_connection_string => 'jdbc:mysql://${MYSQL_HOST}:3306/qa'
        jdbc_user => 'root'
        jdbc_password => '${MYSQL_PASS}'
        jdbc_validate_connection => true
        statement => 'SELECT answers.*, users.reputation as user_reputation FROM qa.answers JOIN qa.users ON answers.owner_user_id = users.id WHERE parent_id = :code ORDER BY score LIMIT 5;'
        parameters => { 'code' => 'id'}
        target => 'answers'
    }
    jdbc_streaming {
        jdbc_driver_library => '${CONNECTOR_PATH}'
        jdbc_driver_class => 'com.mysql.jdbc.Driver'
        jdbc_connection_string => 'jdbc:mysql://${MYSQL_HOST}:3306/qa'
        jdbc_user => 'root'
        jdbc_password => '${MYSQL_PASS}'
        jdbc_validate_connection => true
        statement => 'select related_post_id as post from qa.links WHERE post_id = :code AND links.type = 3 LIMIT 50 '
        parameters => { 'code' => 'id'}
        target => 'relations'
    }
    ruby {
         path => "/filter.rb"
    }

}

output {
    elasticsearch {
    	hosts => 'elasticsearch:9200'
        index => 'questions'
        document_type => 'questions'
    }
}